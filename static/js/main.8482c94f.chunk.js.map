{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","props","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","confirmed","duration","separator","Date","updated","toDateString","recovered","deaths","Chart","fetchDailyData","a","axios","get","data","modifiedData","map","dailyData","total","date","reportDate","React","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","country","CountryPicker","handleCountryChange","fetchCountries","countries","name","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","App","confirm","recover","death","update","latest","setLatest","setCountry","fetchData","changeableUrl","url","lastUpdate","fetchedData","image","src","coronaImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8482c94f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__KIoKD\",\"card\":\"Cards_card__3Pkti\",\"infected\":\"Cards_infected__1xKL7\",\"recovered\":\"Cards_recovered__1BibF\",\"deaths\":\"Cards_deaths__198-b\"};","import React from \"react\";\r\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nfunction Cards(props){\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n          <Typography variant=\"h5\">\r\n          <CountUp start={0} end={props.confirmed} duration={2.5} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\"> {new Date(props.updated).toDateString()} </Typography>\r\n          <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n          <Typography variant=\"h5\">\r\n          <CountUp start={0} end={props.recovered} duration={2.5} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\"> {new Date(props.updated).toDateString()} </Typography>\r\n          <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n          <Typography variant=\"h5\">\r\n          <CountUp start={0} end={props.deaths} duration={2.5} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\"> {new Date(props.updated).toDateString()} </Typography>\r\n          <Typography variant=\"body2\">Number of deaths of COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Chart.module.css\";\r\nimport {Line, Bar} from \"react-chartjs-2\";\r\n\r\n\r\nfunction Chart(props){\r\n  const fetchDailyData = async () => {\r\n      const { data } = await axios.get(\"https://covid19.mathdro.id/api/daily\");\r\n      const modifiedData = data.map((dailyData) =>({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n      }));\r\n      return modifiedData;\r\n    }\r\n    const [dailyData,setDailyData] = React.useState([]);\r\n    useEffect(()=>{\r\n      const fetchAPI = async () => {\r\n        setDailyData( await fetchDailyData());\r\n      }\r\n      fetchAPI();\r\n\r\n    });\r\n  const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n      <Line\r\n      data={{\r\n      labels: dailyData.map(({date}) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({confirmed}) => confirmed),\r\n          label: \"Infected\",\r\n          borderColor: \"#3333ff\",\r\n          fill: true,\r\n        },{\r\n          data: dailyData.map(({deaths}) => deaths),\r\n          label: \"Deaths\",\r\n          borderColor: \"red\",\r\n          backgroundColor: \"rgba(255,0,0,0.5)\",\r\n          fill: true,\r\n        }],\r\n      }}\r\n      />) : null\r\n    );\r\n\r\n    const barChart =(\r\n      props.confirmed\r\n      ?(\r\n        <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n            data: [props.confirmed,props.recovered,props.deaths]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: {display: false},\r\n          title: {display: true, text: `Current in state in ${props.country.country}`},\r\n        }}\r\n        />\r\n      ) : null\r\n\r\n    )\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {props.country.country?barChart:lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n\r\n// [0].confirmed\r\n","import React ,{useEffect} from \"react\";\r\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction CountryPicker({handleCountryChange}){\r\n  const fetchCountries = async ()=>{\r\n    const {data: {countries}} = await axios.get(\"https://covid19.mathdro.id/api/countries\");\r\n    return countries.map((country)=> country.name)\r\n  }\r\n  const [fetchedCountries, setFetchedCountries] = React.useState([]);\r\n  useEffect(()=>{\r\n    const fetchAPI = async() => {\r\n      setFetchedCountries(await fetchCountries())\r\n    }\r\n    fetchAPI();\r\n  },[setFetchedCountries])\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n      <option value=\"\"> Global </option>\r\n      {fetchedCountries.map((country, i) => <option key={i} value={country}> {country} </option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React, {useEffect} from \"react\";\r\nimport {Cards, Chart, CountryPicker} from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport axios from \"axios\";\r\nimport coronaImage from \"./images/image.png\";\r\nfunction App() {\r\n  const [latest, setLatest] = React.useState({\r\n    confirm: null,\r\n    recover: null,\r\n    death: null,\r\n    update: null\r\n  });\r\n  const[country, setCountry] = React.useState({country:null});\r\n\r\nconst fetchData = async (country)=>{\r\n  const url = \"https://covid19.mathdro.id/api\";\r\n  let changeableUrl = url;\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n  return ({\r\n  confirm: confirmed.value,\r\n  recover: recovered.value,\r\n  death: deaths.value,\r\n  update: lastUpdate\r\n});\r\n}\r\n\r\nuseEffect(()=>{\r\n  const fetchAPI = async() =>{\r\n    setLatest(await fetchData())\r\n  }\r\n  fetchAPI();\r\n\r\n},[setLatest])\r\n\r\nconst handleCountryChange = async (country) =>{\r\n  setCountry({country:country})\r\n  const fetchedData = await fetchData(country);\r\n  setLatest(fetchedData);\r\n\r\n}\r\n\r\n  return (\r\n  <div className={styles.container}>\r\n  <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n  <Cards confirmed= {latest.confirm} updated={latest.update} recovered={latest.recover} deaths={latest.death}/>\r\n  <CountryPicker handleCountryChange={handleCountryChange}/>\r\n  <Chart country={country} confirmed= {latest.confirm} recovered={latest.recover} deaths={latest.death}/>\r\n  </div>\r\n)\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3mzu3\",\"image\":\"App_image__3GdDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3cZ_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3TvFF\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}